<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" type="text/css" href="/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/css/stylesheet.css">
       
    <title>COVID-19 Dashboard</title>
    <link rel="icon" type="image/png"  href="/favicon.png">
    <meta name="description" content="A data dashboard to track the novel coronavirus COVID-19 cases and deaths in major countries."/>
    <meta name="og:title" property="og:title" content="COVID-19 Dashboard"/>
    <meta name="twitter:card" content="summary" />
    <meta property="og:description" content="A data dashboard to track the novel coronavirus COVID-19 cases and deaths in major countries." />
    <meta property="og:image" content="ogimage.png" />
    <meta property="og:url" content="http://coviddash.digital" />
    <meta name="twitter:image" content="ogimage.png" />
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap4.min.css">
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-colorschemes"></script>

    
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-162603226-1"></script>
    <script data-ad-client="ca-pub-2275435046137289" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-162603226-1');
    </script>
    <head>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script>
        $(document).ready(function(){
            setInterval(updateCases,10000);
        });
        $(document).ready(function(){
            setInterval(updateDeaths,10000);
        });
    </script>
    <script>
        function updateCases() {
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    document.getElementById("cases").innerHTML = this.responseText;
                }
            };
            xhttp.open("GET", "/counters/cases", true);
            xhttp.send();
        }
    </script>
    <script>
        function updateDeaths() {
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState == 4 && this.status == 200) {
                    document.getElementById("deaths").innerHTML = this.responseText;
                }
            };
            xhttp.open("GET", "/counters/deaths", true);
            xhttp.send();
        }
    </script>
    <script>
        $(document).ready( function () {
            $.noConflict();
    var table = $('#countryTable').DataTable({
        "pageLength": -1,
        "lengthMenu": [[50,100,200,-1],[50,100,200,"All"]]
    });
} );
    </script>
    
</head>


<body>
    <header>
        {{> header}}
    </header>
    <header>
        <div class="sub-header">
            <div class="sh-text">
                <p><b>New</b> (27 September): <a href="/uk">view specific data for the UK and its nations</a></p>
            </div>
        </div>
    </header>
    
    
    <div class="container" style="padding-top: 20px;">
        <div class="row">
            <div class="col-md leftCard">
                <div class="worldCard">
                <p class="cardtitle">Confirmed worldwide cases</p>
                <p class="data" id="cases">{{{counterdata.cases}}}</p>
                </div>
            </div>
            <div class="col-md rightCard">
                <div class="worldCard">
                <p class="cardtitle">Confirmed worldwide deaths</p>
                <p class="data" id="deaths">{{{counterdata.deaths}}}</p>
                </div>
            </div>
        </div>
        
        <svg height="20" width="20" class="update" style="float: left;">
            <circle cx="10" cy="10" r="5" fill="red" />
        </svg>
        <p class="update" style="float: left; font-size: 15px; color:darkgrey;">Checking for updates</p>
        <p style="text-align: right;">Source: <a href="https://www.worldometers.info/coronavirus/">Worldometers</a><!---, <a href="https://bnonews.com/index.php/2020/04/the-latest-coronavirus-cases/">BNO News</a>---></p>
        <br>
        
        <div class="row">
            <div class="error">
                The ECDC recently switched from reporting cases and deaths for each country daily to weekly without warning, which broke my data processing scripts. As such, the data in the graph
                is now outdated and only goes up to 14th December. The table below the graph is completely broken. I'm working on a fix using a different, more reliable data source and will have this 
                updated ASAP. Sorry for the inconvenience.
            </div>
        </div>


        <div class="row">
        <script>  
        $(document).ready(function(){
            $('#deathChart').show();
            $('#casesChart').hide()
            $('#chartselector').on('change', function() {
                if ( this.value == 'cases') {
                    $("#casesChart").show();
                }
                else {
                    $("#casesChart").hide();
                }
                if ( this.value == 'deaths') {
                    $("#deathChart").show();
                }
                else {
                    $("#deathChart").hide();
                }
            });
        });
        </script>
            <select id="chartselector">
                <option value="deaths">Deaths</option>
                <option value="cases">Cases</option>
            </select>
        </div>
        <div class="row" style="margin-top: 5px;">
            <div class="info-box">
            <p style="margin-bottom: 0;">The graph below plots the weekly deaths/cases against the total confirmed deaths/cases for some major countries. Plotting information this way
            removes any effect time itself may have on deaths and cases. For a great explanation of this, check out
            <a href="https://www.youtube.com/watch?v=54XLXg4fYsc">this YouTube video</a> where the inspiration for this graph comes from. Data may look impossible (see Spain's deaths), but this is down to
            countries changing their reported deaths/cases without retrospectively updating daily counts. A fix is being worked on.</p>
            </div>
        </div>
        <div class="row" style="margin-top: 5px;">
            <p style="font-size: 12px;">Tip: Click a country's name on the legend below to remove the country from the graph.</p>
        </div>
            <div class="row chart" style="padding-top: 10px;">
            <canvas id="casesChart" height="800"></canvas>
            <canvas id="deathChart" height="800" ></canvas>
            <section style="width: 100%;">
            <p style="float: left;"> Data: <a href="https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide">European Centre for Disease Prevention and Control</a></p>
            <p class="graphupdate" style="text-align:right;">Last checked for update: {{{lastUpdate}}}</p>
            </section>
            </div>
    <script>
        Chart.defaults.global.defaultFontFamily = 'Arial'
        Chart.defaults.global.defaultFontColor = '#000000'
        Chart.defaults.global.defaultFontSize = 14
        var ctx = document.getElementById('deathChart'); 

        var deathChart = new Chart(ctx, {
            type: 'line',
            data: {
                datasets: [
                {
                    label: 'United Kingdom',
                    data: {{{json dUKdata}}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                }, {
                    label: 'Italy',
                    data: {{{json dITAdata}}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                }, {
                    label: 'Spain',
                    data: {{{json dESPdata}}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true
                }, {
                    label: 'United States',
                    data: {{{json dUSAdata}}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: false
                }, {
                    label: 'South Korea',
                    data: {{{json dKORdata}}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true
                }, {
                    label: 'Germany',
                    data: {{{json dDEUdata}}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true
                }, /*{
                    label: 'Japan',
                    data: {{{json dJPNdata}}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true
                },{
                    label: 'China',
                    data: {{{json dCHNdata }}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true,
                }, */{
                    label: 'Sweden',
                    data: {{{json dSWEdata }}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true,
                },{
                    label: 'Switzerland',
                    data: {{{json dCHEdata }}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true,
                }, {
                    label: 'France',
                    data: {{{json dFRAdata }}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true,
                },{
                    label: 'Netherlands',
                    data: {{{json dNLDdata }}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true,
                },/*{
                    label: 'Canada',
                    data: {{{json dCANdata }}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: true,
                },*/{
                    label: 'Russia',
                    data: {{{json dRUSdata }}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: false,
                },{
                    label: 'Brazil',
                    data: {{{json dBRAdata }}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: false,
                },{
                    label: 'India',
                    data: {{{json dINDdata }}},
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    fill: false,
                    lineTension: 0.5,
                    hidden: false,
                },],
            },
            options: {
                plugins: {
                    colorschemes: {
                        fillAlpha: 0.8,
                        scheme: 'tableau.Classic20',                      
                    },
                },
                tooltips: {
                    enabled: true,
                    callbacks: {
                        beforeTitle: function(toolTipItem, data) {
                            return 'Total confirmed deaths: '
                        },
                        beforeBody: function(toolTipItem, data) {
                            return 'Weekly confirmed deaths: '
                        },
                        footer: function(toolTipItem, data) {
                            var dates = {{{json dates}}}
                            var dateObj = {
                                'United Kingdom': 'United Kingdom',
                                'Italy': 'Italy',
                                'Spain': 'Spain',
                                'United States': 'US',
                                'South Korea': 'Korea, South',
                                'Germany': 'Germany',
                                'China': 'China',
                                'Sweden': 'Sweden',
                                'Switzerland': 'Switzerland',
                                'France': 'France',
                                'Japan': 'Japan',
                                'Ireland': 'Ireland',
                                'Netherlands': 'Netherlands',
                                'Canada': 'Canada',
                                'Russia': 'Russia',
                                'Brazil': 'Brazil',
                                'India': 'India'
                            }
                            var countryCode = dateObj[data.datasets[toolTipItem[0].datasetIndex].label]
                            return dates[countryCode][toolTipItem[0].index]
                        }
                    }
            },  
            responsive: false,
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Weekly confirmed deaths (logarithmic)'
                    },
                    type: 'logarithmic',
                    ticks: {
                        min: 0, //minimum tick
                        max: 50000, //maximum tick
                        callback: function (value, index, values) {
                            return Number(value.toString());//pass tick values as a string into Number function
                        }
                    },
                    afterBuildTicks: function (chartObj) { //Build ticks labelling as per your need
                        chartObj.ticks = [];
                        chartObj.ticks.push(0);
                        chartObj.ticks.push(100);
                        chartObj.ticks.push(200);
                        chartObj.ticks.push(500);
                        chartObj.ticks.push(1000);
                        chartObj.ticks.push(2000);
                        chartObj.ticks.push(5000);
                        chartObj.ticks.push(10000);
                        chartObj.ticks.push(20000);
                        chartObj.ticks.push(50000);
                    }
                }],
                xAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Total confirmed deaths (logarithmic)'
                    },
                    type: 'logarithmic',
                    ticks: {
                        min: 100, //minimum tick
                        max: 500000, //maximum tick
                        callback: function (value, index, values) {
                            return Number(value.toString());//pass tick values as a string into Number function
                        }
                    },
                    afterBuildTicks: function (chartObj) { //Build ticks labelling as per your need
                        chartObj.ticks = [];
                        chartObj.ticks.push(100);
                        chartObj.ticks.push(200);
                        chartObj.ticks.push(500);
                        chartObj.ticks.push(1000);
                        chartObj.ticks.push(2000);
                        chartObj.ticks.push(5000);
                        chartObj.ticks.push(10000);
                        chartObj.ticks.push(20000);
                        chartObj.ticks.push(50000);
                        chartObj.ticks.push(100000);
                        chartObj.ticks.push(200000);
                        chartObj.ticks.push(500000);
                    }
                }]
            }
        }
    });
    </script>
    <script>
        var ctx = document.getElementById('casesChart').getContext('2d');
        var casesChart = new Chart(ctx, {
            type: 'line',
            data: {
                datasets: [
                {
                    label: 'United Kingdom',
                    data: {{{json cUKdata}}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                }, {
                    label: 'Italy',
                    data: {{{json cITAdata}}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                }, {
                    label: 'Spain',
                    data: {{{json cESPdata}}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true
                }, {
                    label: 'United States',
                    data: {{{json cUSAdata}}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: false
                }, {
                    label: 'Korea, South',
                    data: {{{json cKORdata}}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true
                }, {
                    label: 'Germany',
                    data: {{{json cDEUdata}}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true
                }, {
                    label: 'Japan',
                    data: {{{json cJPNdata}}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true
                },/*{
                    label: 'China',
                    data: {{{json cCHNdata }}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true,
                },*/ {
                    label: 'Sweden',
                    data: {{{json cSWEdata }}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true,
                },{
                    label: 'Switzerland',
                    data: {{{json cCHEdata }}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true,
                }, {
                    label: 'France',
                    data: {{{json cFRAdata }}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true,
                },{
                    label: 'Netherlands',
                    data: {{{json cNLDdata }}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true,
                },/*{
                    label: 'Canada',
                    data: {{{json cCANdata }}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: true,
                },*/{
                    label: 'Russia',
                    data: {{{json cRUSdata }}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: false,
                },{
                    label: 'Brazil',
                    data: {{{json cBRAdata }}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: false,
                },{
                    label: 'India',
                    data: {{{json cINDdata }}},
                    fill: false,
                    borderWidth: 2,
                    pointRadius: 2,
                    pointHitRadius: 5,
                    lineTension: 0.5,
                    hidden: false,
                },],
            },
            options: {
                plugins: {
                    colorschemes: {
                        fillAlpha: 0.8,
                        scheme: 'tableau.Classic20',                      
                    },
                },
                tooltips: {
                    enabled: true,
                    callbacks: {
                        beforeTitle: function(toolTipItem, data) {
                            return 'Total confirmed cases: '
                        },
                        beforeBody: function(toolTipItem, data) {
                            return 'Weekly confirmed cases: '
                        },
                        footer: function(toolTipItem, data) {
                            var dates = {{{json dates}}}
                            var dateObj = {
                                'United Kingdom': 'United Kingdom',
                                'Italy': 'Italy',
                                'Spain': 'Spain',
                                'United States': 'US',
                                'South Korea': 'Korea, South',
                                'Germany': 'Germany',
                                'China': 'China',
                                'Sweden': 'Sweden',
                                'Switzerland': 'Switzerland',
                                'France': 'France',
                                'Japan': 'Japan',
                                'Ireland': 'Ireland',
                                'Netherlands': 'Netherlands',
                                'Canada': 'Canada',
                                'Russia': 'Russia',
                                'Brazil': 'Brazil',
                                'India': 'India'
                            }
                            var countryCode = dateObj[data.datasets[toolTipItem[0].datasetIndex].label]
                            return dates[countryCode][toolTipItem[0].index]
                        }
                    }
            },  
            responsive: false,
            maintainAspectRatio: false,
            scales: {
                yAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Weekly confirmed cases (logarithmic)'
                    },
                    type: 'logarithmic',
                    ticks: {
                        min: 100, //minimum tick
                        max: 2000000, //maximum tick
                        callback: function (value, index, values) {
                            return Number(value.toString());//pass tick values as a string into Number function
                        }
                    },
                    afterBuildTicks: function (chartObj) { //Build ticks labelling as per your need
                        chartObj.ticks = [];
                        chartObj.ticks.push(100);
                        chartObj.ticks.push(200);
                        chartObj.ticks.push(500);
                        chartObj.ticks.push(1000);
                        chartObj.ticks.push(2000);
                        chartObj.ticks.push(5000);
                        chartObj.ticks.push(10000);
                        chartObj.ticks.push(20000);
                        chartObj.ticks.push(100000);
                        chartObj.ticks.push(200000);
                        chartObj.ticks.push(500000);
                        chartObj.ticks.push(1000000);
                        chartObj.ticks.push(2000000);
                    }
                }],
                xAxes: [{
                    scaleLabel: {
                        display: true,
                        labelString: 'Total confirmed cases (logarithmic)'
                    },
                    type: 'logarithmic',
                    ticks: {
                        min: 100, //minimum tick
                        max: 50000000, //maximum tick
                        callback: function (value, index, values) {
                            return Number(value.toString());//pass tick values as a string into Number function
                        }
                    },
                    afterBuildTicks: function (chartObj) { //Build ticks labelling as per your need
                        chartObj.ticks = [];
                        chartObj.ticks.push(100);
                        chartObj.ticks.push(200);
                        chartObj.ticks.push(500);
                        chartObj.ticks.push(1000);
                        chartObj.ticks.push(2000);
                        chartObj.ticks.push(5000);
                        chartObj.ticks.push(10000);
                        chartObj.ticks.push(20000);
                        chartObj.ticks.push(50000);
                        chartObj.ticks.push(100000);
                        chartObj.ticks.push(200000);
                        chartObj.ticks.push(500000);
                        chartObj.ticks.push(1000000);
                        chartObj.ticks.push(2000000);
                        chartObj.ticks.push(5000000);
                        chartObj.ticks.push(10000000);
                        chartObj.ticks.push(50000000);

                    }
                }]
            }
        }
    });
    </script>
    <br>
    <div class="row" >
        <h4 style="float: none">How many deaths and cases in each country?</h4>
    </div>
    <div class="row">
        <table class="display" id="countryTable" style="width:100%;">
            <thead>
                <tr>
                    <th>Country</th>
                    <th>Cases</th>
                    <th>New Cases</th>
                    <th>Deaths</th>
                    <th>New Deaths</th>
                </tr>
            </thead>
            <tbody>
                {{#each countryData}}
                    <tr>
                        <td><a href="/country/{{urlsafe-country @key}}">{{@key}}</a></td>
                        <td>{{thousandSeparate this.cases}}</td>
                        <td>{{thousandSeparate this.new_cases}}</td>
                        <td>{{thousandSeparate this.deaths}}</td>
                        <td>{{thousandSeparate this.new_deaths}}</td>
                    </tr>
                {{/each}}
            </tbody>
        </table>

    <p>Data: <a href="https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide">European Centre for Disease Prevention and Control</a></p>
    </div>    
    <footer >
            <a href="mailto:contact@coviddash.digital">Contact</a>
    </footer>
</body>

</html>